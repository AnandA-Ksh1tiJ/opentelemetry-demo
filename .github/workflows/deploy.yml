name: Trigger OpenTelemetry Docker Build and Deploy

on:
  push:
    branches:
      - main  # Adjust this to the branch you want to trigger the workflow on
    paths:
      - '**/Dockerfile'  # Triggers on changes to Dockerfile files
  pull_request:
    branches:
      - main  # Adjust this to the branch you want to trigger the workflow on
    paths:
      - '**/Dockerfile'  # Triggers on changes to Dockerfile files
  workflow_dispatch:  # Manual trigger option from the GitHub UI
    inputs:
      push:
        description: 'Should the images be pushed'
        required: false
        default: false
        type: boolean
      version:
        description: 'The version used when tagging the image'
        required: false
        default: 'dev'
        type: string
      dockerhub_repo:
        description: 'Docker Hub repository'
        required: false
        default: 'otel/demo'
        type: string
      ghcr_repo:
        description: 'GHCR repository'
        required: false
        default: 'ghcr.io/open-telemetry/demo'
        type: string
  release:
    types: [published]

jobs:
  build_and_push_images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.event.release.tag_name }} .

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.event.release.tag_name }}

      - name: Set up kubectl
        uses: aws-actions/configure-kubeconfig@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          cluster-name: ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Update Kubernetes deployment
        run: |
          kubectl set image deployment/${{ secrets.K8S_DEPLOYMENT_NAME }} ${{
            secrets.K8S_DEPLOYMENT_NAME }}=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.event.release.tag_name }} --record
          kubectl rollout status deployment/${{ secrets.K8S_DEPLOYMENT_NAME }}
